#!/usr/bin/env python
from publicsuffixlist import PublicSuffixList
from six import string_types

def get_tld_esld(PSL, DOMAIN):
    # Outputs the pairs (TopLevelDomain, EffectiveSecondLevelDomain) for a
    # given domain (string) provided in input.
    if not isinstance(DOMAIN, string_types):
        tld, esld = None, None
    else:
        # remove '.' characters
        while DOMAIN.endswith("."):
            DOMAIN = DOMAIN[:-1]
        while DOMAIN.startswith("."):
            DOMAIN = DOMAIN[1:]
        if len(DOMAIN) == 0:
            tld, esld = None, None
        else:
            try:
                # information about TLDs
                tld = PSL.publicsuffix(DOMAIN)
            except Exception:
                tld = PublicSuffixList().publicsuffix(DOMAIN)
            if tld is None:
                esld = None
            else:
                if tld == DOMAIN:
                    esld = tld
                else:
                    # we obtain the ESLD by removing the TLD from 'DOMAIN'
                    udn = DOMAIN[:-len(tld)-1]
                    # find the rightmost '.' and extract the ESLD
                    i = udn.rfind(".")
                    esld = udn[i+1:] + '.' + tld
    return tld, esld


if __name__ == "__main__":
    # some test cases
    psl = PublicSuffixList()

    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, "amazon.com")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, "s3.amazonaws.com")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, "cloudfront.net")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, ".amazon.com")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, "..amazon.com")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(None, ".amazon.com.")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, "amazon.com.")))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, None)))
    print ("TLD: '%s' - ESLD: '%s'\n" % (get_tld_esld(psl, [])))
