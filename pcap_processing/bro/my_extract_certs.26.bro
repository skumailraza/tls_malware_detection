##############################################################################
### This script dumps all certificates seen in the wire.
### Each certificate is written in PEM format to a distinct file with
### the following name convention <DER_HASH>.pem
### DER_HASH here is the MD5 hash of the Bro Files log.
##############################################################################


@load base/protocols/ssl

export {
    ## Control if host certificates offered by the defined hosts
    ## will be written to the PEM certificates file.
    ## Choices are: LOCAL_HOSTS, REMOTE_HOSTS, ALL_HOSTS, NO_HOSTS.
    option extract_certs_pem = ALL_HOSTS;
}

# This is an internally maintained set to prevent relogging of
# certificates that have already been seen. 
# It is indexed on the md5 of the certificate in DER format
global extracted_certs : set[string] = set() &read_expire=2hr &redef;


# Dump all certificates when SSL connection is established
event ssl_established(c: connection)
{
  # 
  if ( ! c$ssl?$cert_chain || |c$ssl$cert_chain| == 0 || ! c$ssl$cert_chain[0]?$x509 )
      return;
  if ( ! addr_matches_host(c$id$resp_h, extract_certs_pem) )
      return;
  #
  # Server certificate chain
  #
  local chain: vector of opaque of x509 = vector();
  if (c$ssl?$cert_chain){
      for (idx in c$ssl$cert_chain)
      {
        local cert_hash = c$ssl$cert_chain[idx]$md5;
        local cert = c$ssl$cert_chain[idx]$x509$handle;
        # Update new local chain used for validation
        chain[idx] = c$ssl$cert_chain[idx]$x509$handle;
        # Dump certificate if not seen before
        if ( ! ( cert_hash in extracted_certs ) )
        {
          add extracted_certs[cert_hash];
          local filename = fmt("%s.pem", cert_hash);
          local f_handler = open(filename);
          write_file(f_handler, x509_get_certificate_string(cert, T));
          close(f_handler);
        }
      }
  }
  #
  # Process client certificate chain (if exists)
  #
  if (c$ssl?$client_cert_chain)
  {
    for (cl_idx in c$ssl$client_cert_chain)
    {
      local cl_cert_hash = c$ssl$client_cert_chain[cl_idx]$md5;
      local cl_cert = c$ssl$client_cert_chain[cl_idx]$x509$handle;
      # Dump certificate if not seen before
      if ( ! ( cl_cert_hash in extracted_certs ) )
      {
        add extracted_certs[cert_hash];
        local cl_filename = fmt("%s.pem", cl_cert_hash);
        local cl_f_handler = open(cl_filename);
        write_file(cl_f_handler, x509_get_certificate_string(cl_cert, T));
        close(cl_f_handler);
      }
    }
  }
}
