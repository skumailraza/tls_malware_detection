module SSL;

@load base/protocols/ssl

export {
    redef record SSL::Info += {
        c_session_id: string &log &optional;
    };
}

event bro_init()
    {
    # Add a new filter to the Conn::LOG stream that logs only
    # timestamp and originator address.
    local filter: Log::Filter = [$name="more-ssl", $path="my_ssl",
                                 $include=set("ts", "id.orig_h", "c_session_id")];
    Log::add_filter(SSL::LOG, filter);
    }

event ssl_client_hello(c: connection, version: count, record_version: count, possible_ts: time, client_random: string, session_id: string, ciphers: index_vec, comp_methods: index_vec) &priority=5
{
  if (|session_id| > 0 && session_id != /^\x00{32}$/){
      c$ssl$c_session_id = bytestring_to_hexstr(session_id);
  }

}

# event x509_certificate(f: fa_file, cert_ref: opaque of x509, cert: X509::Certificate)
# {
#     set_session(c);
#     c$ssl$root_issuer = cert$issuer;
# }

