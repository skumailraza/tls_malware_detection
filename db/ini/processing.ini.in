;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; GLOBAL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[global]
log_root = /tmp/farm

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; DATABASE configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[database]

; Hostname of the database server
db_host = r2d4.imdeasoftware.org

; TCP Port of the database server
db_port = 3306

; Database name
db_name = FARM

; Database usernamen
db_user = 

; Database password
; !!!!!!!!!!!!!! DO NOT PUT THE PASSWORD HERE!!!!!!!!!!!!!!!!!!!!!!!!
; Put instead the name of the enviroment variable that contains the password
db_pass = 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MongoDB configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[mongodb]

; Hostname of the database server
mdb_host = 193.147.107.25

; TCP Port of the database server
mdb_port = 27017

; Database name
mdb_name = VirusTotal

; Database usernamen
mdb_user = 

; Database password
; !!!!!!!!!!!!!! DO NOT PUT THE PASSWORD HERE!!!!!!!!!!!!!!!!!!!!!!!!
; Put instead the name of the enviroment variable that contains the password
mdb_pass = 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CUCKOO configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[cuckoo]
cuckoo_path = /home/user/cuckoo/

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; FILESTABLE configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[filestable]

; Filepath, a path to a directory that contains the malware executables 
; It CANNOT be empty
filepath = /home/user/malware/

; action, is a string (insert or update).
; insert =  All files that are already in the DB are ignored. New files are added to the DB.
; update =  Files that are already in the DB are updated. New files are also added to the DB.  
; It CANNOT be empty
; action = update
action = insert

; Dataset name, a unique string that will be assigned to all files processed
; If empty, no dataset is associated to the files
dataset_name = 

; icon_extract, a boolean value that if set to True it extracts the icon from
; the executables otherwise if False it does not
; If empty it is considered as False
icon_extract = False 

; continue, a boolean value that if set to True it the script continues
; from the last file it processed. It ignores all files found in tmp/processed_files.txt
; If empty it is considered as False
continue = True 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; VIRUSTOTAL configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vt]

; Path to the VirusTotal API key
vt_key_path = /home/platon/malware_repo/trunk/processing/vt/collection/key.txt

; File with hashes to query
; CANNOT be empty
query_file = /home/platon/malware_repo/projects/vt_scripts/datasets/genome.csv

; Directory to story VT reports
; Default: VT_RESULTS/
; if empty default value used
out_dir = 

; Number of files to send to VT in one request
; For public keys use 1
batch_limit = 1

; Numer of requests per minute; Configure based on your Virustotal rate limit
; For public keys use 4
vt_rate_limit = 4

; Logfile for storing the progress of the queries
logfile = query_vt_report.log

; Boolean value (True/False); Default: False
; True: Script queries all hashes without checking in MongoDB
;       !!!!! This option DOES NOT require to complete the mongodb section of the configuration file. !!!!!
; False: Script checks and ignores hashes that are already in the MongoDB
;       !!!!! This option require to complete the mongodb section of the configuration file. !!!!!
; CANNOT be empty
force_vt_query = False

; Boolean value (True/False); Default: True
; True: Script inserts new reports to MongoDB automatically
; False: Script does not insert to MongoDB. User needs to it later using
; other script
; CANNOT be empty
mongo_db_insert = True

; Label to be used when VT reports are inserted to MongoDB
; You can use multiple name separated by commas (e.g., "name1,name2")
; CANNOT be empty if mongo_db_insert is True
dataset_name = genome,android

; Email to send notification when script finishes or crashes
; Default: <empty>
; if not set then no email is sent 
email = 

; Directory with VT reports to ignore
; This parameter is useful when script crashes and VT reports are 
; not in MongoDB. In that case set this parameter to "VT_RESULTS/"
; in order to ignore all hashes already queried
local_cache_dir = 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Network configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[network]

; Path to the bro script for Bro 2.2 used in parse_bro_logs.py
bro_bin = /usr/local/bro_2.5/bin/bro

; Path to the bro script for Bro 2.3.1 used in parse_bro_logs.py
bro_script_25 = ~/repo/trunk/processing/network/bro/my_extract_certs.25.bro

; Path to the Bro http script
bro_http_script = /home/platon/code/malware_repo/trunk/processing/network/bro/my_http.bro

; IP of the host that the VMs where executed
; This is the IP address of the manager that controls the VMs (e.g., Cuckoo) 
; Traffic sent to this IP will not be inserted in DB
; vm_host = 192.168.0.1
vm_host = 192.168.56.1

; List of IP addresses used by the VMs
; Traffic with both SRC and DST IP in this list will not be inserted in DB
vm_ips = 192.168.56.101, 192.168.56.102, 192.168.56.103, 192.168.56.104

; Whether ICMP traffic should be inserted in DB
ignore_icmp = True

; All traffic sent to the following <IP:port> pairs will not be inserted in DB
ignore_endpoints = 224.0.0.252:5355, 239.255.255.250:1900, 239.255.255.250:3702, 192.168.56.255:137, 192.168.56.255:138

; DNS queries for the following domains will not be inserted in DB
ignore_dns_queries = isatap, temu-pc, teredo.ipv6.microsoft.com, dns.msftncsi.com, ipv6.msftncsi.com


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OTHER configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[other]

; Directory used to output temporary files
tmp_dir = /tmp/

