from subprocess import check_output
import re

# Query the geolocation information for the given IP
def query_geoip(ip, include_cidr = True):
    if include_cidr:
        flag = "-i"
    else:
        flag = ""
    geo = check_output(["geoiplookup", flag, ip])
    return geo.split('\n')

# Get country from geoip data
def get_country(data):
    for k in data:
        if "Country" in k:
            cc = k.split(": ")[1].split(",")[0]
            break
    return cc

# Get AS number and description from geoip data
def get_as_info(data):
    for k in data:
        if "AS" in k:
            asn = k.split(": ")[1].split()[0].split("AS")[1]
            asd = k.split(": ")[1]
            asd = asd.split()
            final_asd = ''
            for e in asd[1:]:
                final_asd += e+" "
            asd = final_asd
            asd = asd.rstrip().lstrip()
            break
    return (asn, asd)

# Get CIDR from geoip data
def get_cidr(data):
    for k in data:
        if 'network:' in k:
            start = k.split()[1]
            mask = k.split('::')[1]
            break
    return start+'/'+mask

# Get all data from geoip data
def get_geoip_data(ip):
    data = query_geoip(ip, include_cidr = True)
    cidr = None
    asn = None
    asd = None
    cc = None
    for k in data:
        if "Country" in k:
            cc = k.split(": ")[1].split(",")[0]
        if "AS" in k:
            if "ASNum Edition: IP Address not found" in k:
                asn = None
                asd = None
            else:
                try:
                    asn = int(k.split(": ")[1].split()[0].split("AS")[1])
                    asd = k.split(": ")[1]
                    asd = asd.split()
                    final_asd = ''
                    for e in asd[1:]:
                        final_asd += e+" "
                    asd = final_asd
                    asd = asd.rstrip().lstrip()
                except IndexError:
                    asn = None
                    asd = None
        if 'network:' in k:
            if (cidr is None):
                start = k.split()[1]
                mask = k.split('::')[1]
                cidr = start+'/'+mask
    return (asn, asd, cc, cidr)

